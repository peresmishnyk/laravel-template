#--------------------------------------------------------------------------
# APP CONFIGURATION
#--------------------------------------------------------------------------
# Basic application settings.

APP_NAME="Laravel Dynamic DB Failover"
APP_ENV=local
APP_KEY=
APP_DEBUG=true
APP_URL=http://localhost:8080
APP_PORT_HOST=8080
APP_LOCALE=en
APP_FALLBACK_LOCALE=en
APP_FAKER_LOCALE=en_US
BCRYPT_ROUNDS=12

#--------------------------------------------------------------------------
# LOGGING
#--------------------------------------------------------------------------

LOG_CHANNEL=stack
LOG_LEVEL=debug
LOG_STACK=single # For 'stack' channel, use 'single', 'daily', or comma-separated list.
LOG_DEPRECATIONS_CHANNEL=null # 'null' to ignore, or a channel name to log them.

#--------------------------------------------------------------------------
# DATABASE CONNECTIONS
#--------------------------------------------------------------------------
# Primary, Failover, and a special Blocking connection.

DB_CONNECTION=mysql
DB_HOST=db_primary
DB_PORT=3306
DB_DATABASE=laravel_primary
DB_USERNAME=user
DB_PASSWORD=password

DB_FAILOVER_HOST=db_failover
DB_FAILOVER_PORT=3306
DB_FAILOVER_DATABASE=laravel_failover
DB_FAILOVER_USERNAME=user
DB_FAILOVER_PASSWORD=password

# This connection is likely used by the dynamic failover package as a last resort.
# It uses a special 'blocking' driver. For it to work correctly and avoid 502 errors
# when databases are down, the 'blocking_connection' in config/database.php should only define 'driver' => 'blocking'.
# The _HOST, _PORT, _DATABASE, etc., variables below are intentionally commented out
# as they are not used by the 'blocking' driver and might cause issues.
DB_BLOCKING_CONNECTION=mysql_blocking
# DB_BLOCKING_HOST=mysql_blocking
# DB_BLOCKING_PORT=3306
# DB_BLOCKING_DATABASE=laravel_blocking
# DB_BLOCKING_USERNAME=sail
# DB_BLOCKING_PASSWORD=password

#--------------------------------------------------------------------------
# CACHE CONFIGURATION
#--------------------------------------------------------------------------
# Default application cache is Redis.
# The dynamic_db_failover package is configured (in its own config file)
# to use 'memcached' store for its specific caching needs.

CACHE_DRIVER=redis
# CACHE_STORE= # Not needed if CACHE_DRIVER directly maps to a store name.
# CACHE_PREFIX=your_app_prefix # Optional: Prefix for all cache keys.

# Configuration for the Memcached service itself.
MEMCACHED_HOST=memcached
MEMCACHED_PORT=11211
# MEMCACHED_PERSISTENT_ID=
# MEMCACHED_USERNAME=
# MEMCACHED_PASSWORD=

#--------------------------------------------------------------------------
# QUEUES
#--------------------------------------------------------------------------
# Queues are handled by Redis.

QUEUE_CONNECTION=redis
# QUEUE_REDIS_RETRY_AFTER=90
# QUEUE_REDIS_BLOCK_FOR=5

#--------------------------------------------------------------------------
# REDIS
#--------------------------------------------------------------------------
# Redis is used for: Default Cache, Queues, Sessions.

REDIS_CLIENT=phpredis
REDIS_HOST=redis
REDIS_PASSWORD=null
REDIS_PORT=6379
# REDIS_DB=0 # Default Redis database.
# REDIS_CACHE_DB=1 # Optional: Separate DB for cache if CACHE_DRIVER=redis.
# REDIS_QUEUE_DB=2 # Optional: Separate DB for queues if QUEUE_CONNECTION=redis.

#--------------------------------------------------------------------------
# SESSIONS
#--------------------------------------------------------------------------
# Sessions are stored in Redis.

SESSION_DRIVER=redis
SESSION_LIFETIME=120
SESSION_ENCRYPT=false
SESSION_PATH=/
SESSION_DOMAIN=null
SESSION_SECURE_COOKIE=false
SESSION_HTTP_ONLY=true
SESSION_SAME_SITE=lax
# SESSION_CONNECTION= # Optional: if using a specific Redis connection for sessions.

#--------------------------------------------------------------------------
# MAIL / EMAIL
#--------------------------------------------------------------------------

MAIL_MAILER=smtp
MAIL_HOST=mailpit
MAIL_PORT=1025
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null
MAIL_FROM_ADDRESS="hello@example.com"
MAIL_FROM_NAME="${APP_NAME}"

#--------------------------------------------------------------------------
# BROADCASTING (REVERB)
#--------------------------------------------------------------------------
# Real-time event broadcasting using Reverb.

BROADCAST_CONNECTION=reverb

# Reverb Server (Backend) Configuration
REVERB_APP_ID="dummyAppId"
REVERB_APP_KEY="dummyAppKey"
REVERB_APP_SECRET="dummyAppSecret"
REVERB_HOST="0.0.0.0" # Host for the Reverb server (listens on all interfaces within container)
REVERB_PORT=9090 # Port for the Reverb server
REVERB_SCHEME=http

# Reverb Client (Frontend - passed to Vite) Configuration
# These values are typically referenced by REVERB_ variables above.
VITE_REVERB_APP_KEY="dummyAppKey"
VITE_REVERB_HOST="localhost" # How the client (browser on host machine) accesses Reverb
VITE_REVERB_PORT="9090"
VITE_REVERB_SCHEME="http"

# Vite Pusher variables (if Echo client is configured for 'pusher' to connect to Reverb)
# Allows using 'pusher-js' client with Reverb.
VITE_PUSHER_APP_KEY="dummyAppKey"
VITE_PUSHER_HOST="localhost"
VITE_PUSHER_PORT="9090"
VITE_PUSHER_SCHEME="http"
VITE_PUSHER_APP_CLUSTER=mt1 # Default Pusher cluster, can be kept for Reverb.

#--------------------------------------------------------------------------
# FILESYSTEM
#--------------------------------------------------------------------------

FILESYSTEM_DISK=local
# FILESYSTEM_CLOUD=s3

#--------------------------------------------------------------------------
# AWS SERVICES (Optional)
#--------------------------------------------------------------------------
# Not currently used, but placeholders are here.

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false # True for MinIO
# AWS_ENDPOINT=http://minio:9000 # Example for MinIO

#--------------------------------------------------------------------------
# MISCELLANEOUS
#--------------------------------------------------------------------------

# Maintenance Mode
APP_MAINTENANCE_DRIVER=file
# APP_MAINTENANCE_STORE=database # If APP_MAINTENANCE_DRIVER=cache

# PHP CLI Server (Not used with Docker + Nginx/FPM)
PHP_CLI_SERVER_WORKERS=4

# Vite (Frontend Build Tool)
VITE_APP_NAME="${APP_NAME}"
# VITE_PUSHER_PORT="${REVERB_PORT}" # Already covered in Reverb client section.

#--------------------------------------------------------------------------
# DOCKER HOST CONFIGURATION (for app container to control Docker)
#--------------------------------------------------------------------------
# This GID should match the GID of the Docker socket on your host machine.
# On macOS with Docker Desktop, you can find it by running:
# ls -n $(docker context inspect -f '{{.Endpoints.docker.Host}}' | sed 's|unix://||g')
# Or, if /var/run/docker.sock is a symlink (ls -l /var/run/docker.sock shows -> /path/to/actual.sock):
# ls -n /path/to/actual.sock
# Look for the numeric group ID in the output (e.g., srw-rw---- 1 <user_id> <group_id> ...)
HOST_DOCKER_GID=
