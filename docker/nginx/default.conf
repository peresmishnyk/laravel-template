error_log stderr info;

server {
    listen 80 default_server;
    listen [::]:80 default_server;

    server_name _;

    root /var/www/public;
    index index.php index.html index.htm;

    # Location for Laravel Reverb WebSocket connections
    location /app/ { # Matches Reverb's default path /app/{APP_KEY}
        proxy_pass http://app:9090; # 'app' is the service name, 9090 is REVERB_PORT
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade"; # Note: Quoted "Upgrade"
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Timeouts for WebSocket might be useful if connections drop frequently
        # proxy_connect_timeout 7d;
        # proxy_send_timeout 7d;
        # proxy_read_timeout 7d;
    }

    # Specific location for MCP SSE streaming and RPC calls
    location /mcp/sse { # Removed '=' to handle both GET and POST
        # Pass all requests for /mcp/sse to Laravel's front controller (index.php)
        # The actual routing (GET vs POST) will be handled by Laravel.
        try_files /nonexistent_file_to_force_fallback_to_php /index.php?$request_uri;
        # Using $request_uri ensures the original URI (including /mcp/sse) is passed to PHP.
        # The try_files directive needs a real file or a fallback to @name or /file.
        # Here, we ensure it always falls back to index.php for this location.

        # Nginx specific for SSE - these will apply to both GET (SSE) and POST (RPC) responses on this path.
        # This should be fine as they mostly affect buffering and timeouts.
        add_header X-Accel-Buffering 'no' always;

        # The actual fastcgi_pass to PHP-FPM will be handled by the generic 'location ~ \.php$' block below,
        # once try_files internally rewrites the request to /index.php.
    }

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass app:9000; # 'app' is the service name of our PHP-FPM container
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param SERVER_NAME $host;

        # SSE specific settings - moved from the /mcp/sse block to apply to all PHP if needed,
        # or keep them more targeted if only for SSE stream responses.
        # For now, let's ensure they are present for the PHP handler that will serve SSE.
        fastcgi_buffering off;         # Crucial for SSE
        fastcgi_read_timeout 300s;     # Long timeout for SSE
        chunked_transfer_encoding off; # Ensure transfer encoding doesn't interfere with SSE
        fastcgi_keep_conn on;          # Explicitly keep backend connection open if supported
    }

    location ~ /\.ht {
        deny all;
    }

    # Optional: Add cache control headers for static assets
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|css|js)$ {
        expires 1M;
        access_log off;
        add_header Cache-Control "public";
    }

    client_max_body_size 100M;
}
